class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        
        vector<vector<int>> triplets;
        sort(nums.begin(),nums.end());
        
        
        for(int i=0;i<nums.size()-2;i++)
        {
            if(i==0 || (i>0 && nums[i] != nums[i-1]))
            {
            int check = -nums[i];
            int begin = i+1,end=nums.size()-1;
            while(begin<end)
            {
                if(nums[begin]+nums[end] == check)
                {
                    vector<int> ans = {nums[i],nums[begin],nums[end]};
                    triplets.push_back(ans);
                    
                    while(begin<end && nums[begin]==nums[begin+1]) begin++;
                    while(begin<end && nums[end]==nums[end-1]) end--;
                    
                    begin++; end--;
                }
                else if(nums[begin]+nums[end] < check)
                        begin++;
                else end--;
            }
         } 
        }
        
        return triplets;
        
        
        
    }
};
